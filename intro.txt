EF - Entity Framework. Введение
EF - фреймворк для упрощения работы с БД. Главная идея - перемещение
работы с БД полностью на язык программирования (прячет SQL),
унификация - создание одинаковых способов для работы с разными СУБД.
Базируется на ADO, не имеет других способов к данным.
"+" универсальность, один язык (не нужо учить SQL)
"-" сложность, отсутствие "фич" SQL

Установка
Необходимо добавить несколько NuGet-пакетов
- Microsoft.EntityFrameworkCore - ядро фреймворка, базовые средства
- Microsoft.EntityFrameworkCore.SqlServer - драйвер(провайдер) для MS SQL Server
- Microsoft.EntityFrameworkCore.Tools - средства командной консоли

EF может работать в разных режимах
- Data first - БД уже существует, необходимо составить код для работы с ней
- Code first - БД нет, разработка только начинается

В режиме Code first проектирование начинается с описания классов-сущностей
В папке Data/Entity описываем все классы, которые необходимы в проекте
В папке Data описываем класс-контекст, наследуем от DbContext из пространства Microsoft.EntityFrameworkCore
В контексте для каждой сущности описываем DbSet:
        public DbSet<Entity.Department> Departments { get; set; }
        public DbSet<Entity.Manager> Managers { get; set; }
    и делегируем конструктор
    и настраиваем подключение в override методе OnConfiguring()

Миграции - перевод на унифицированный язык инструкции для БД.
Можно привести аналогию с коммитами ГИТ: каждое изменение в БД отображаются в миграции,
что позволяет возвращаться к прошлым состояниям или обновлять их в БД
Для создания миграции включаем PM консоль: Tools-NuGet-PM Console
И пишем команду Add-Migration Initial, затем появляется папка Migrations
Когда вы выполняете Add-Migration Initial, EF создаст файл миграции, который содержит код для создания начальной схемы БД.
В этом файле будет описано, какие таблицы, столбцы и отношения должны быть созданы при первоначальной установке БД.

Использование миграции к БД
Пишем команду Update-Database
Когда вы выполняете Update-Database, EF применяет все непримененные миграции, которые были созданы после последнего обновления БД.

Подключаемся к БД - со строки подключения копируем название сервера: (LocalDB)\MSSQLLocalDB
Переходим: Tools-Connect To Database
   провайдер - Microsoft SQL Server (SqlClient)
   сервер - (LocalDB)\MSSQLLocalDB
   БД - как в строке подключения: ado-ef-p12


Доп. о миграции:
Главная цель миграции БД состоит в том, чтобы обеспечить безопасное и структурированное обновление БД,
сохраняя при этом целостность данных и предоставляя возможность применения изменений как на тестовой среде, так и на продуктивной среде.
Миграции позволяют разработчикам управлять изменениями в схеме БД, отслеживать историю изменений и облегчить совместную разработку в команде,
где несколько разработчиков могут вносить изменения в БД.
